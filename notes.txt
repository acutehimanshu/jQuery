Backend: NodeJs
Framework: ExpressJs

-----------------------
-> Install node/npm

How to install express? 
-> npm install express

------------------------------------------------------------------------------------------
Index
Lecture 1: Basic
Lecture 2: Selectors 
Lecture 3: Chaining
Lecture 4: OnLoad Events, input methods events
Lecture 5: Event bubbling, target, currentTarget
Lecture 6: Checkbox functionality with (checked, checked all, and few checked)
Lecture 7: Keyboard Keys up, down and press events handling
Lecture 8: Concatanation, Animation method
------------------------------------------------------------------------------------------

Default port as per socity is 3000 

DOM - Document Object Model:
whenver you load the page, browser put all the componenets in the data structure
that ds is called DOM. 

when dom is ready?
When all the data on the browser is loaded (Read complete html code)
--
$(function(){

});

$ is internally a pointer 
that is pointing toward a function type object 
we will pass to address of any function 
that will execute when dom will load. 
--

selectores
> means a > b -> b which is inside a will be selected
$('tbody > tr:even'): select even tr of tbody like 0 2 4 6
$('tr:nth-child(1)')  1st numenber tr will be selected // starts with 1, on 0th child its undesfined.
$('tr:eq(0)')  start with 0 (index based data selection)
$('td:contains(MAQ)) // case sensative // it means element that contain MAQ whose TR will be selected
$('*') selects everythings
$('h1:first') 1st h1 selected
$('h1:last')
$("[type]") - all elements tthat contains attribute type
$("[type='institute']") element contains attribute type with value institute
$("[type!='institute']") element Do not contains attribute type with value institute
$("p[type]") all element P which contains attribute TYPE will be selected.
$(":input") applied to all input (include buttons as well)
$(":button") application for only buttons 
:input, :button, :enabled, :disabled, :checked, :selected
$("p.good") that paragraph which class contains good will be selected
Methods
addClass
removeClass 

$('#placementView > tbody > tr:eq(0)').addClass('xyz').end().find("tr:eq(3)").addClass('pqr');
this is chaining 
when you hit end()  you get back again to parent. 

we are gatting Jquery wrappers here
how to get core data from javascript 
$('#placementView > tbody > tr:eq(0)').html(); from Jquery wrapper  
$('#placementView > tbody > tr:eq(0)').innerHTML; - ERROR 
$('#placementView > tbody > tr:eq(0)').get(0).innerHTML - CORRECT with get(0) we can get unwrapped data
or 
$('#placementView > tbody > tr:eq(0)')[0].innerHTML - CORRECT with get(0) we can get unwrapped data
.innerHTML .tagName


-----------------------
$(); // as soon as dom load it will work
vs 
window.addEventListern() ;; it will work when dom with its elements like css, js, images and so son will be loaded then it will work

$(#selector).on("AnyMethod", (ev)=>{
    alert($(this).html()); // ERROR
}) // if you are using Arrow function then you can not use This inside it. // means object ka address this me bind nhi hota he
this following won't work as this in arrow function does not get bounded with the object for which the event was designed to be fired. 
Soultion 
$(#selector).on("AnyMethod", function()=>{
    alert($(this).html()); // Working
})
but if you want to do it with arrow function then we have solution for it

$(#selector).on("AnyMethod", (ev)=>{
    //alert($(ev.currentTarget).html()); // ERROR
    alert($(ev.Target).html()); // ERROR
})


event bubbling: When hit event for any child then its parent event also hit, parent of parent also and it goes upto window level. 
even if child handler is not there still bubbling will happen. 

ev.target  : it print(select) the clicked value only  (if child is clicked only child will print) like you cliked on the child of div then only clicked will be seleced
ev.currentTarget : it print(select) entire div (tag) like you cliked on the child of div then whole div will be seleced

how to stop bubbling: ev.stopPropagation(); 

$(document)  this represents Dom. 

keyup -> first default functionality will run then our code will work
keydown -> first our code will run then Default functionality will work
keypress -> Only work for typeable keys like a to z, space and so on, it will not work for F1 to F11 and enter and so on. 
// in keypress keycode for small and capital are different // here it wil give charcode 
// we should use which to use


how to stop default execution after our key 
if(ev.key == 'F3') ev.preventDefault(); // this will only affect things which is associated with browser, like it will not work for capslock

Animate methods 

$('selector').animate(
{
    "height": "100px" // set properties here
}, 
2000,  // time take to perform action
'linear',  // type of animation linear/swing and many more
()=>{      // call back function // once action complete then this will execute
    $(ev.target).html("show less");
})
;